	
UTest({
	'interface': function () {
		
		deepEq_(Object.keys(Logger), [
			'_parent',
			'_level',
			'_name',
			'cfg',
			'color',
			'formatMessage',
			'log',
			'warn',
			'debug',
			'trace',
			'error',
			'getTransport',
			'create',
			'level_LOG',
			'level_WARN',
			'level_TRACE',
			'level_DEBUG',
			'level_ERROR',
			'level_EXCEPTION'
		]);
		
		var log = Logger(90);
		
		eq_(log.log.name, 'fn_doNothing');
	},
	
	'format circular json': function(){
		Logger.cfg('color', 'none');
		var a = {
			letter: 'A',
			
			small: [ 'a', 'b', 'c', 5, {time: new Date}],
			search: /a/g,
			
			doSmth: function(){}
		};
		a.b = a;
		
		var str = Logger.color.formatJSON(a);
		
		Logger.cfg('color', 'ascii');
		has_(str, 'b: <circular>', 'has circular');
		has_(str, /\d{4}\-\d{2}\-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z/, 'has time');
	}
});
